apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: petstore
  description: The petstore API
  tags:
    - store
    - rest
  links:
    - url: https://github.com/swagger-api/swagger-petstore
      title: GitHub Repo
      icon: github
    - url: https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml
      title: API Spec
      icon: code
spec:
  type: openapi
  lifecycle: production
  definition: |
  openapi: 3.0.2
  servers:
    - url: /v3
  info:
  version: 1.0.15
  title: Swagger Petstore - OpenAPI 3.0
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  tags:
    - name: pet
      description: Everything about your Pets
      externalDocs:
        description: Find out more
        url: 'http://swagger.io'
    - name: store
      description: Access to Petstore orders
      externalDocs:
        description: Find out more about our store
        url: 'http://swagger.io'
    - name: user
      description: Operations about user
  paths:
    /pet/findByStatus:
      get:
        tags:
          - pet
        summary: Finds Pets by status
        description: Multiple status values can be provided with comma separated strings
        operationId: findPetsByStatus
        parameters:
          - name: status
            in: query
            description: Status values that need to be considered for filter
            required: false
            explode: true
            schema:
              type: string
              enum:
                - available
                - pending
                - sold
              default: available
        responses:
          '200':
            description: successful operation
            content:
              application/xml:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Pet'
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Pet'
          '400':
            description: Invalid status value
        security:
          - petstore_auth:
              - 'write:pets'
              - 'read:pets'
              externalDocs:
    description: Find out more about Swagger
    url: 'http://swagger.io'
  components:
    schemas:
      Order:
        x-swagger-router-model: io.swagger.petstore.model.Order
        properties:
          id:
            type: integer
            format: int64
            example: 10
          petId:
            type: integer
            format: int64
            example: 198772
          quantity:
            type: integer
            format: int32
            example: 7
          shipDate:
            type: string
            format: date-time
          status:
            type: string
            description: Order Status
            enum:
              - placed
              - approved
              - delivered
            example: approved
          complete:
            type: boolean
        xml:
          name: order
        type: object
      Customer:
        properties:
          id:
            type: integer
            format: int64
            example: 100000
          username:
            type: string
            example: fehguy
          address:
            type: array
            items:
              $ref: '#/components/schemas/Address'
            xml:
              wrapped: true
              name: addresses
        xml:
          name: customer
        type: object
      Address:
        properties:
          street:
            type: string
            example: 437 Lytton
          city:
            type: string
            example: Palo Alto
          state:
            type: string
            example: CA
          zip:
            type: string
            example: 94301
        xml:
          name: address
        type: object
      Category:
        x-swagger-router-model: io.swagger.petstore.model.Category
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: Dogs
        xml:
          name: category
        type: object
      User:
        x-swagger-router-model: io.swagger.petstore.model.User
        properties:
          id:
            type: integer
            format: int64
            example: 10
          username:
            type: string
            example: theUser
          firstName:
            type: string
            example: John
          lastName:
            type: string
            example: James
          email:
            type: string
            example: john@email.com
          password:
            type: string
            example: 12345
          phone:
            type: string
            example: 12345
          userStatus:
            type: integer
            format: int32
            example: 1
            description: User Status
        xml:
          name: user
        type: object
      Tag:
        x-swagger-router-model: io.swagger.petstore.model.Tag
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
        xml:
          name: tag
        type: object
      Pet:
        x-swagger-router-model: io.swagger.petstore.model.Pet
        required:
          - name
          - photoUrls
        properties:
          id:
            type: integer
            format: int64
            example: 10
          name:
            type: string
            example: doggie
          category:
            $ref: '#/components/schemas/Category'
          photoUrls:
            type: array
            xml:
              wrapped: true
            items:
              type: string
              xml:
                name: photoUrl
          tags:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/components/schemas/Tag'
              xml:
                name: tag
          status:
            type: string
            description: pet status in the store
            enum:
              - available
              - pending
              - sold
        xml:
          name: pet
        type: object
      ApiResponse:
        properties:
          code:
            type: integer
            format: int32
          type:
            type: string
          message:
            type: string
        xml:
          name: '##default'
        type: object
    requestBodies:
      Pet:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet object that needs to be added to the store
      UserArray:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
        description: List of user object
    securitySchemes:
      petstore_auth:
        type: oauth2
        flows:
          implicit:
            authorizationUrl: 'https://petstore.swagger.io/oauth/authorize'
            scopes:
              'write:pets': modify pets in your account
              'read:pets': read your pets
      api_key:
        type: apiKey
        name: api_key
        in: header
    
